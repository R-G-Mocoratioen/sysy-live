define void @__pseudo__please_dont_give_same_name() {
$0:
  ret void
}

declare i32 @getint()

declare i32 @getch()

declare i32 @getarray(i32*)

declare void @putint(i32)

declare void @putch(i32)

declare void @putarray(i32, i32*)

declare void @starttime()

declare void @stoptime()

declare void @score_sing(i32, i32*, i32*, i32, i32, i32)

declare void @score_push(i32, i32)

declare void @bar_push(i32, i32)

declare i32 @newnote(i32, i32, i32)

declare i32 @newnote_rest(i32, i32, i32)

declare i32 @newbar()

declare i32 @newscore()

declare void @bar_setbpm(i32, i32)

declare void @score_setbpm(i32, i32)

declare void @score_append(i32, i32)

declare void @bar_copy(i32, i32)

declare void @score_copy(i32, i32)

declare void @score_replace(i32, i32, i32)

declare void @score_inc_pitch(i32, i32)

declare void @bar_inc_pitch(i32, i32)

declare void @score_set_duration(i32, i32)

declare void @bar_set_duration(i32, i32)

define i32 @main() {
$1:
  %$2 = call i32 @newscore()
  %$3 = call i32 @newbar()
  %$4 = call i32 @newnote(i32 12, i32 1, i32 1)
  call void @bar_push(i32 %$3, i32 %$4)
  %$5 = call i32 @newnote(i32 12, i32 1, i32 1)
  call void @bar_push(i32 %$3, i32 %$5)
  %$6 = call i32 @newnote(i32 12, i32 1, i32 1)
  call void @bar_push(i32 %$3, i32 %$6)
  %$7 = call i32 @newnote(i32 12, i32 1, i32 2)
  call void @bar_push(i32 %$3, i32 %$7)
  %$8 = call i32 @newnote(i32 14, i32 1, i32 2)
  call void @bar_push(i32 %$3, i32 %$8)
  call void @score_push(i32 %$2, i32 %$3)
  %$9 = call i32 @newbar()
  %$10 = call i32 @newnote(i32 16, i32 1, i32 1)
  call void @bar_push(i32 %$9, i32 %$10)
  %$11 = call i32 @newnote(i32 12, i32 1, i32 1)
  call void @bar_push(i32 %$9, i32 %$11)
  %$12 = call i32 @newnote(i32 12, i32 1, i32 1)
  call void @bar_push(i32 %$9, i32 %$12)
  %$13 = call i32 @newnote(i32 12, i32 1, i32 2)
  call void @bar_push(i32 %$9, i32 %$13)
  %$14 = call i32 @newnote(i32 11, i32 1, i32 2)
  call void @bar_push(i32 %$9, i32 %$14)
  call void @score_push(i32 %$2, i32 %$9)
  %$15 = call i32 @newbar()
  %$16 = call i32 @newnote(i32 9, i32 1, i32 2)
  call void @bar_push(i32 %$15, i32 %$16)
  %$17 = call i32 @newnote(i32 12, i32 1, i32 2)
  call void @bar_push(i32 %$15, i32 %$17)
  %$18 = call i32 @newnote(i32 11, i32 1, i32 2)
  call void @bar_push(i32 %$15, i32 %$18)
  %$19 = call i32 @newnote(i32 9, i32 1, i32 2)
  call void @bar_push(i32 %$15, i32 %$19)
  %$20 = call i32 @newnote(i32 8, i32 1, i32 2)
  call void @bar_push(i32 %$15, i32 %$20)
  %$21 = call i32 @newnote(i32 9, i32 1, i32 2)
  call void @bar_push(i32 %$15, i32 %$21)
  %$22 = call i32 @newnote(i32 4, i32 1, i32 2)
  call void @bar_push(i32 %$15, i32 %$22)
  %$23 = call i32 @newnote(i32 7, i32 1, i32 2)
  call void @bar_push(i32 %$15, i32 %$23)
  call void @score_push(i32 %$2, i32 %$15)
  %$24 = alloca i32
  store i32 %$2, i32* %$24
  %$25 = call i32 @newscore()
  call void @score_copy(i32 %$25, i32 %$2)
  %$26 = alloca i32
  store i32 %$25, i32* %$26
  %$27 = alloca [10 x i32]
  %$28 = getelementptr inbounds [10 x i32], [10 x i32]* %$27, i32 0, i32 0
  store i32 49, i32* %$28
  %$29 = getelementptr inbounds [10 x i32], [10 x i32]* %$27, i32 0, i32 1
  store i32 46, i32* %$29
  %$30 = getelementptr inbounds [10 x i32], [10 x i32]* %$27, i32 0, i32 2
  store i32 119, i32* %$30
  %$31 = getelementptr inbounds [10 x i32], [10 x i32]* %$27, i32 0, i32 3
  store i32 97, i32* %$31
  %$32 = getelementptr inbounds [10 x i32], [10 x i32]* %$27, i32 0, i32 4
  store i32 118, i32* %$32
  %$33 = getelementptr inbounds [10 x i32], [10 x i32]* %$27, i32 0, i32 5
  store i32 0, i32* %$33
  %$34 = getelementptr inbounds [10 x i32], [10 x i32]* %$27, i32 0, i32 6
  store i32 0, i32* %$34
  %$35 = getelementptr inbounds [10 x i32], [10 x i32]* %$27, i32 0, i32 7
  store i32 0, i32* %$35
  %$36 = getelementptr inbounds [10 x i32], [10 x i32]* %$27, i32 0, i32 8
  store i32 0, i32* %$36
  %$37 = getelementptr inbounds [10 x i32], [10 x i32]* %$27, i32 0, i32 9
  store i32 0, i32* %$37
  %$38 = alloca [10 x i32]
  %$39 = getelementptr inbounds [10 x i32], [10 x i32]* %$38, i32 0, i32 0
  store i32 50, i32* %$39
  %$40 = getelementptr inbounds [10 x i32], [10 x i32]* %$38, i32 0, i32 1
  store i32 46, i32* %$40
  %$41 = getelementptr inbounds [10 x i32], [10 x i32]* %$38, i32 0, i32 2
  store i32 119, i32* %$41
  %$42 = getelementptr inbounds [10 x i32], [10 x i32]* %$38, i32 0, i32 3
  store i32 97, i32* %$42
  %$43 = getelementptr inbounds [10 x i32], [10 x i32]* %$38, i32 0, i32 4
  store i32 118, i32* %$43
  %$44 = getelementptr inbounds [10 x i32], [10 x i32]* %$38, i32 0, i32 5
  store i32 0, i32* %$44
  %$45 = getelementptr inbounds [10 x i32], [10 x i32]* %$38, i32 0, i32 6
  store i32 0, i32* %$45
  %$46 = getelementptr inbounds [10 x i32], [10 x i32]* %$38, i32 0, i32 7
  store i32 0, i32* %$46
  %$47 = getelementptr inbounds [10 x i32], [10 x i32]* %$38, i32 0, i32 8
  store i32 0, i32* %$47
  %$48 = getelementptr inbounds [10 x i32], [10 x i32]* %$38, i32 0, i32 9
  store i32 0, i32* %$48
  %$49 = alloca i32
  store i32 2, i32* %$49
  br label %$50

$50:
  %$51 = load i32, i32* %$49
  %$52 = icmp slt i32 %$51, 7
  %$53 = zext i1 %$52 to i32
  %$54 = icmp ne i32 %$53, 0
  br i1 %$54, label %$55, label %$56

$55:
  %$57 = call i32 @newscore()
  %$58 = load i32, i32* %$26
  call void @score_copy(i32 %$57, i32 %$58)
  %$59 = alloca i32
  store i32 %$57, i32* %$59
  %$60 = load i32, i32* %$49
  call void @score_inc_pitch(i32 %$57, i32 %$60)
  %$61 = mul i32 %$60, 500
  %$62 = sub i32 12000, %$61
  call void @score_set_duration(i32 %$57, i32 %$62)
  %$63 = load i32, i32* %$24
  call void @score_append(i32 %$63, i32 %$57)
  %$64 = add i32 %$60, 2
  store i32 %$64, i32* %$49
  call void @putint(i32 %$64)
  br label %$50

$56:
  %$65 = load i32, i32* %$24
  %$66 = getelementptr inbounds [10 x i32], [10 x i32]* %$27, i32 0, i32 0
  %$67 = getelementptr inbounds [10 x i32], [10 x i32]* %$38, i32 0, i32 0
  call void @score_sing(i32 %$65, i32* %$66, i32* %$67, i32 44100, i32 16, i32 2)
  ret i32 0

$68:
  ret i32 0
}
