define void @__pseudo__please_dont_give_same_name() {
$0:
  ret void
}

declare i32 @getint()

declare i32 @getch()

declare i32 @getarray(i32*)

declare void @putint(i32)

declare void @putch(i32)

declare void @putarray(i32, i32*)

declare void @starttime()

declare void @stoptime()

declare void @score_sing(i32, i32*, i32*, i32, i32, i32)

declare void @score_push(i32, i32)

declare void @bar_push(i32, i32)

declare i32 @newnote(i32, i32, i32)

declare i32 @newnote_rest(i32, i32, i32)

declare i32 @newbar()

declare i32 @newscore()

declare void @bar_setbpm(i32, i32)

declare void @score_setbpm(i32, i32)

define i32 @main() {
$1:
  %$2 = call i32 @newnote(i32 24, i32 2, i32 1)
  %$3 = alloca i32
  store i32 %$2, i32* %$3
  %$4 = call i32 @newbar()
  %$5 = call i32 @newnote(i32 16, i32 1, i32 1)
  call void @bar_push(i32 %$4, i32 %$5)
  %$6 = call i32 @newnote(i32 19, i32 1, i32 1)
  call void @bar_push(i32 %$4, i32 %$6)
  %$7 = alloca i32
  store i32 %$4, i32* %$7
  %$8 = call i32 @newscore()
  %$9 = call i32 @newbar()
  %$10 = call i32 @newnote(i32 12, i32 1, i32 1)
  call void @bar_push(i32 %$9, i32 %$10)
  %$11 = call i32 @newnote(i32 12, i32 1, i32 1)
  call void @bar_push(i32 %$9, i32 %$11)
  %$12 = call i32 @newnote(i32 12, i32 1, i32 1)
  call void @bar_push(i32 %$9, i32 %$12)
  %$13 = call i32 @newnote(i32 12, i32 1, i32 2)
  call void @bar_push(i32 %$9, i32 %$13)
  %$14 = call i32 @newnote(i32 14, i32 1, i32 2)
  call void @bar_push(i32 %$9, i32 %$14)
  call void @score_push(i32 %$8, i32 %$9)
  %$15 = call i32 @newbar()
  %$16 = call i32 @newnote(i32 16, i32 1, i32 1)
  call void @bar_push(i32 %$15, i32 %$16)
  %$17 = call i32 @newnote(i32 12, i32 1, i32 1)
  call void @bar_push(i32 %$15, i32 %$17)
  %$18 = call i32 @newnote(i32 12, i32 1, i32 1)
  call void @bar_push(i32 %$15, i32 %$18)
  %$19 = call i32 @newnote_rest(i32 1, i32 1, i32 1)
  call void @bar_push(i32 %$15, i32 %$19)
  call void @score_push(i32 %$8, i32 %$15)
  %$20 = call i32 @newbar()
  %$21 = call i32 @newnote(i32 17, i32 1, i32 1)
  call void @bar_push(i32 %$20, i32 %$21)
  %$22 = call i32 @newnote(i32 17, i32 1, i32 1)
  call void @bar_push(i32 %$20, i32 %$22)
  %$23 = call i32 @newnote(i32 16, i32 1, i32 1)
  call void @bar_push(i32 %$20, i32 %$23)
  %$24 = call i32 @newnote(i32 17, i32 1, i32 1)
  call void @bar_push(i32 %$20, i32 %$24)
  call void @score_push(i32 %$8, i32 %$20)
  %$25 = call i32 @newbar()
  %$26 = call i32 @newnote(i32 19, i32 1, i32 2)
  call void @bar_push(i32 %$25, i32 %$26)
  %$27 = call i32 @newnote_rest(i32 2, i32 1, i32 4)
  call void @bar_push(i32 %$25, i32 %$27)
  %$28 = call i32 @newnote(i32 21, i32 1, i32 4)
  call void @bar_push(i32 %$25, i32 %$28)
  %$29 = call i32 @newnote(i32 19, i32 1, i32 2)
  call void @bar_push(i32 %$25, i32 %$29)
  %$30 = call i32 @newnote(i32 17, i32 1, i32 2)
  call void @bar_push(i32 %$25, i32 %$30)
  %$31 = call i32 @newnote(i32 19, i32 1, i32 1)
  call void @bar_push(i32 %$25, i32 %$31)
  %$32 = call i32 @newnote(i32 16, i32 1, i32 1)
  call void @bar_push(i32 %$25, i32 %$32)
  call void @score_push(i32 %$8, i32 %$25)
  %$33 = call i32 @newbar()
  %$34 = call i32 @newnote(i32 21, i32 1, i32 1)
  call void @bar_push(i32 %$33, i32 %$34)
  %$35 = call i32 @newnote(i32 17, i32 1, i32 1)
  call void @bar_push(i32 %$33, i32 %$35)
  %$36 = call i32 @newnote(i32 23, i32 1, i32 1)
  call void @bar_push(i32 %$33, i32 %$36)
  %$37 = call i32 @newnote(i32 20, i32 1, i32 1)
  call void @bar_push(i32 %$33, i32 %$37)
  call void @score_push(i32 %$8, i32 %$33)
  %$38 = alloca i32
  store i32 %$8, i32* %$38
  %$39 = alloca [10 x i32]
  %$40 = getelementptr inbounds [10 x i32], [10 x i32]* %$39, i32 0, i32 0
  store i32 49, i32* %$40
  %$41 = getelementptr inbounds [10 x i32], [10 x i32]* %$39, i32 0, i32 1
  store i32 46, i32* %$41
  %$42 = getelementptr inbounds [10 x i32], [10 x i32]* %$39, i32 0, i32 2
  store i32 119, i32* %$42
  %$43 = getelementptr inbounds [10 x i32], [10 x i32]* %$39, i32 0, i32 3
  store i32 97, i32* %$43
  %$44 = getelementptr inbounds [10 x i32], [10 x i32]* %$39, i32 0, i32 4
  store i32 118, i32* %$44
  %$45 = getelementptr inbounds [10 x i32], [10 x i32]* %$39, i32 0, i32 5
  store i32 0, i32* %$45
  %$46 = getelementptr inbounds [10 x i32], [10 x i32]* %$39, i32 0, i32 6
  store i32 0, i32* %$46
  %$47 = getelementptr inbounds [10 x i32], [10 x i32]* %$39, i32 0, i32 7
  store i32 0, i32* %$47
  %$48 = getelementptr inbounds [10 x i32], [10 x i32]* %$39, i32 0, i32 8
  store i32 0, i32* %$48
  %$49 = getelementptr inbounds [10 x i32], [10 x i32]* %$39, i32 0, i32 9
  store i32 0, i32* %$49
  %$50 = alloca [10 x i32]
  %$51 = getelementptr inbounds [10 x i32], [10 x i32]* %$50, i32 0, i32 0
  store i32 50, i32* %$51
  %$52 = getelementptr inbounds [10 x i32], [10 x i32]* %$50, i32 0, i32 1
  store i32 46, i32* %$52
  %$53 = getelementptr inbounds [10 x i32], [10 x i32]* %$50, i32 0, i32 2
  store i32 119, i32* %$53
  %$54 = getelementptr inbounds [10 x i32], [10 x i32]* %$50, i32 0, i32 3
  store i32 97, i32* %$54
  %$55 = getelementptr inbounds [10 x i32], [10 x i32]* %$50, i32 0, i32 4
  store i32 118, i32* %$55
  %$56 = getelementptr inbounds [10 x i32], [10 x i32]* %$50, i32 0, i32 5
  store i32 0, i32* %$56
  %$57 = getelementptr inbounds [10 x i32], [10 x i32]* %$50, i32 0, i32 6
  store i32 0, i32* %$57
  %$58 = getelementptr inbounds [10 x i32], [10 x i32]* %$50, i32 0, i32 7
  store i32 0, i32* %$58
  %$59 = getelementptr inbounds [10 x i32], [10 x i32]* %$50, i32 0, i32 8
  store i32 0, i32* %$59
  %$60 = getelementptr inbounds [10 x i32], [10 x i32]* %$50, i32 0, i32 9
  store i32 0, i32* %$60
  call void @bar_push(i32 %$4, i32 %$2)
  call void @score_setbpm(i32 %$8, i32 150)
  call void @bar_setbpm(i32 %$4, i32 210)
  call void @score_push(i32 %$8, i32 %$4)
  %$61 = getelementptr inbounds [10 x i32], [10 x i32]* %$39, i32 0, i32 0
  %$62 = getelementptr inbounds [10 x i32], [10 x i32]* %$50, i32 0, i32 0
  call void @score_sing(i32 %$8, i32* %$61, i32* %$62, i32 44100, i32 16, i32 2)
  ret i32 0

$63:
  ret i32 0
}
