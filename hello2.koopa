global %0 = alloc i32, 0

fun @__pseudo__please_dont_give_same_name() {
%1:
  ret
}

decl @getint(): i32

decl @getch(): i32

decl @getarray(*i32): i32

decl @putint(i32)

decl @putch(i32)

decl @putarray(i32, *i32)

decl @starttime()

decl @stoptime()

fun @QuickSort(%2: *i32, %3: i32, %4: i32): i32 {
%5:
  %6 = alloc *i32
  store %2, %6
  %7 = alloc i32
  store %3, %7
  %8 = alloc i32
  store %4, %8
  %9 = load %7
  %10 = load %8
  %11 = lt %9, %10
  br %11, %12, %13

%12:
  %14 = alloc i32
  %15 = load %7
  store %15, %14
  %16 = alloc i32
  %17 = load %8
  store %17, %16
  %18 = alloc i32
  %19 = load %6
  %20 = load %7
  %21 = getptr %19, %20
  %22 = load %21
  store %22, %18
  jump %23

%13:
  ret 0

%23:
  %24 = load %14
  %25 = load %16
  %26 = lt %24, %25
  br %26, %27, %28

%27:
  jump %29

%28:
  %30 = load %6
  %31 = load %14
  %32 = getptr %30, %31
  %33 = load %18
  store %33, %32
  %34 = alloc i32
  %35 = load %14
  %36 = sub %35, 1
  store %36, %34
  %37 = load %6
  %38 = load %7
  %39 = load %34
  %40 = call @QuickSort(%37, %38, %39)
  store %40, %34
  %41 = load %14
  %42 = add %41, 1
  store %42, %34
  %43 = load %6
  %44 = load %34
  %45 = load %8
  %46 = call @QuickSort(%43, %44, %45)
  store %46, %34
  jump %13

%29:
  %47 = load %14
  %48 = load %16
  %49 = lt %47, %48
  %50 = alloc i32
  store 0, %50
  br %49, %51, %52

%53:
  %54 = load %16
  %55 = sub %54, 1
  store %55, %16
  jump %29

%56:
  %57 = load %14
  %58 = load %16
  %59 = lt %57, %58
  br %59, %60, %61

%51:
  %62 = load %6
  %63 = load %16
  %64 = getptr %62, %63
  %65 = load %64
  %66 = load %18
  %67 = sub %66, 1
  %68 = gt %65, %67
  %69 = ne %68, 0
  store %69, %50
  jump %52

%52:
  %70 = load %50
  br %70, %53, %56

%60:
  %71 = load %6
  %72 = load %14
  %73 = getptr %71, %72
  %74 = load %6
  %75 = load %16
  %76 = getptr %74, %75
  %77 = load %76
  store %77, %73
  %78 = load %14
  %79 = add %78, 1
  store %79, %14
  jump %61

%61:
  jump %80

%80:
  %81 = load %14
  %82 = load %16
  %83 = lt %81, %82
  %84 = alloc i32
  store 0, %84
  br %83, %85, %86

%87:
  %88 = load %14
  %89 = add %88, 1
  store %89, %14
  jump %80

%90:
  %91 = load %14
  %92 = load %16
  %93 = lt %91, %92
  br %93, %94, %95

%85:
  %96 = load %6
  %97 = load %14
  %98 = getptr %96, %97
  %99 = load %98
  %100 = load %18
  %101 = lt %99, %100
  %102 = ne %101, 0
  store %102, %84
  jump %86

%86:
  %103 = load %84
  br %103, %87, %90

%94:
  %104 = load %6
  %105 = load %16
  %106 = getptr %104, %105
  %107 = load %6
  %108 = load %14
  %109 = getptr %107, %108
  %110 = load %109
  store %110, %106
  %111 = load %16
  %112 = sub %111, 1
  store %112, %16
  jump %95

%95:
  jump %23

%113:
  ret 0
}

fun @main(): i32 {
%114:
  store 10, %0
  %115 = alloc [i32, 10]
  %116 = getelemptr %115, 0
  store 4, %116
  %117 = getelemptr %115, 1
  store 3, %117
  %118 = getelemptr %115, 2
  store 9, %118
  %119 = getelemptr %115, 3
  store 2, %119
  %120 = getelemptr %115, 4
  store 0, %120
  %121 = getelemptr %115, 5
  store 1, %121
  %122 = getelemptr %115, 6
  store 6, %122
  %123 = getelemptr %115, 7
  store 5, %123
  %124 = getelemptr %115, 8
  store 7, %124
  %125 = getelemptr %115, 9
  store 8, %125
  %126 = alloc i32
  store 0, %126
  %127 = alloc i32
  store 9, %127
  %128 = getelemptr %115, 0
  %129 = load %126
  %130 = load %127
  %131 = call @QuickSort(%128, %129, %130)
  store %131, %126
  jump %132

%132:
  %133 = load %126
  %134 = load %0
  %135 = lt %133, %134
  br %135, %136, %137

%136:
  %138 = alloc i32
  %139 = load %126
  %140 = getelemptr %115, %139
  %141 = load %140
  store %141, %138
  %142 = load %138
  call @putint(%142)
  store 10, %138
  %143 = load %138
  call @putch(%143)
  %144 = load %126
  %145 = add %144, 1
  store %145, %126
  jump %132

%137:
  ret 0

%146:
  ret 0
}
