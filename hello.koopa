global %0 = alloc i32, 0

fun @__pseudo__please_dont_give_same_name() {
%1:
  ret
}

decl @getint(): i32

decl @getch(): i32

decl @getarray(*i32): i32

decl @putint(i32)

decl @putch(i32)

decl @putarray(i32, *i32)

decl @starttime()

decl @stoptime()

fun @QuickSort(%2: *i32, %3: i32, %4: i32): i32 {
%5:
  %6 = alloc *i32
  store %2, %6
  %7 = alloc i32
  store %3, %7
  %8 = alloc i32
  store %4, %8
  %9 = load %7
  %10 = load %8
  %11 = lt %9, %10
  br %11, %12, %13

%12:
  %14 = alloc i32
  %15 = load %7
  store %15, %14
  %16 = alloc i32
  %17 = load %8
  store %17, %16
  %18 = alloc i32
  %19 = load %6
  %20 = getptr %19, %15
  %21 = load %20
  store %21, %18
  jump %22

%13:
  ret 0

%22:
  %23 = load %14
  %24 = load %16
  %25 = lt %23, %24
  br %25, %26, %27

%26:
  jump %28

%27:
  %29 = load %6
  %30 = load %14
  %31 = getptr %29, %30
  %32 = load %18
  store %32, %31
  %33 = alloc i32
  %34 = sub %30, 1
  store %34, %33
  %35 = load %7
  %36 = call @QuickSort(%29, %35, %34)
  store %36, %33
  %37 = add %30, 1
  store %37, %33
  %38 = load %8
  %39 = call @QuickSort(%29, %37, %38)
  store %39, %33
  jump %13

%28:
  %40 = load %14
  %41 = load %16
  %42 = lt %40, %41
  %43 = alloc i32
  store 0, %43
  br %42, %44, %45

%46:
  %47 = load %16
  %48 = sub %47, 1
  store %48, %16
  jump %28

%49:
  %50 = load %14
  %51 = load %16
  %52 = lt %50, %51
  br %52, %53, %54

%44:
  %55 = load %6
  %56 = load %16
  %57 = getptr %55, %56
  %58 = load %57
  %59 = load %18
  %60 = sub %59, 1
  %61 = gt %58, %60
  %62 = ne %61, 0
  store %62, %43
  jump %45

%45:
  %63 = load %43
  br %63, %46, %49

%53:
  %64 = load %6
  %65 = load %14
  %66 = getptr %64, %65
  %67 = load %16
  %68 = getptr %64, %67
  %69 = load %68
  store %69, %66
  %70 = add %65, 1
  store %70, %14
  jump %54

%54:
  jump %71

%71:
  %72 = load %14
  %73 = load %16
  %74 = lt %72, %73
  %75 = alloc i32
  store 0, %75
  br %74, %76, %77

%78:
  %79 = load %14
  %80 = add %79, 1
  store %80, %14
  jump %71

%81:
  %82 = load %14
  %83 = load %16
  %84 = lt %82, %83
  br %84, %85, %86

%76:
  %87 = load %6
  %88 = load %14
  %89 = getptr %87, %88
  %90 = load %89
  %91 = load %18
  %92 = lt %90, %91
  %93 = ne %92, 0
  store %93, %75
  jump %77

%77:
  %94 = load %75
  br %94, %78, %81

%85:
  %95 = load %6
  %96 = load %16
  %97 = getptr %95, %96
  %98 = load %14
  %99 = getptr %95, %98
  %100 = load %99
  store %100, %97
  %101 = sub %96, 1
  store %101, %16
  jump %86

%86:
  jump %22

%102:
  ret 0
}

fun @main(): i32 {
%103:
  store 10, %0
  %104 = alloc [i32, 10]
  %105 = getelemptr %104, 0
  store 4, %105
  %106 = getelemptr %104, 1
  store 3, %106
  %107 = getelemptr %104, 2
  store 9, %107
  %108 = getelemptr %104, 3
  store 2, %108
  %109 = getelemptr %104, 4
  store 0, %109
  %110 = getelemptr %104, 5
  store 1, %110
  %111 = getelemptr %104, 6
  store 6, %111
  %112 = getelemptr %104, 7
  store 5, %112
  %113 = getelemptr %104, 8
  store 7, %113
  %114 = getelemptr %104, 9
  store 8, %114
  %115 = alloc i32
  store 0, %115
  %116 = alloc i32
  store 9, %116
  %117 = getelemptr %104, 0
  %118 = call @QuickSort(%117, 0, 9)
  store %118, %115
  jump %119

%119:
  %120 = load %115
  %121 = load %0
  %122 = lt %120, %121
  br %122, %123, %124

%123:
  %125 = alloc i32
  %126 = load %115
  %127 = getelemptr %104, %126
  %128 = load %127
  store %128, %125
  call @putint(%128)
  store 10, %125
  call @putch(10)
  %129 = add %126, 1
  store %129, %115
  jump %119

%124:
  ret 0

%130:
  ret 0
}
